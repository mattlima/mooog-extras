(function(){var a,b=function(a,b){return function(){return a.apply(b,arguments)}},c=function(a,b){function c(){this.constructor=a}for(var e in b)d.call(b,e)&&(a[e]=b[e]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},d={}.hasOwnProperty;a=function(a){function d(a,c){this._instance=a,this.check_freq=b(this.check_freq,this),d.__super__.constructor.apply(this,arguments)}return c(d,a),d.prototype.before_config=function(a){return this.input=this.context.createOscillator(),this.p=this.context.createScriptProcessor(),this.out_null=this.context.createGain(),this.out_null.gain.value=0,this.b=this.context.createBuffer(1,2,this.context.sampleRate),this.b.getChannelData(0).set([1,1]),this.bs=this.context.createBufferSource(),this.out=this.context.createGain(),this.bs.buffer=this.b,this.bs.loop=!0,this.p.onaudioprocess=this.check_freq,this.input.frequency.value=2,this.last=0,this.insert_node(this.input,0),this.insert_node(this.out,1),null},d.prototype.after_config=function(a){return this.input.disconnect(this.out),this.input.connect(this.p),this.p.connect(this.out_null),this.out_null.connect(this.out),this.bs.connect(this.out),this.input.start(),this.bs.start(),null},d.prototype.check_freq=function(a){var b,c,d,e,f,g,h;for(c=a.inputBuffer,f=c.length,d=c.getChannelData(0),b=e=0,g=d.length;g>e;b=++e)h=d[b],(0===d[b]||this.last<0&&d[b]>0)&&(this.out.gain.value=2*Math.random()-1),this.last=d[b];return null},d}(Mooog.MooogAudioNode),Mooog.extend_with("SampleAndHold",a)}).call(this);